Please list your group members here and answer all questions below.
Group members:

_________________________________________________________________________________________________________________________________
Author: Jon Shidal

CSE 332S - Debugging practice

This program plays a simple lottery game. A user inputs their chosen numbers on the command line (1-MAXNUMBER). The program then:
1. generates a list of winning numbers
2. sorts that list
3. uses binary search on the sorted list to determine how many user chosen numbers match the winning numbers
4. outputs the winning numbers and whether or not the user won(you win if more than half of the numbers you supply via the command line are winning numbers) 

Possible program return values:
Enums for theses can be found in lottery.h
0 - NOTAWINNER
1 - WINNER
2 - JACKPOT 
-1 - INCORRECTUSAGE

Program parameters and their default values:
Enum for these can be found in lottery.h
MAXNUMBER = 100   (numbers generated by the program will range from 1 - MAXNUMBER)
WINNINGNUMBERS = 10 (how many winning numbers will be generated)
USERNUMBERS = 5 (how many user supplied numbers the program expects, as command line arguments)

STUDIO ANSWERS:

The program inputs five numbers. So, the user inputs 5 command line arguments in adition to the program name.
A total of 10 winning numbers are generated by the program. 

When I run the program with five command line arguments, it fails to stop executing. 

In trying to diagnose the problem, I debugged it as follows:

1st check to see if the winning numbers are being stored correctly, which they are:

H:\332_Local_Repo\332_studios\Studio7\Studio7\Debug>Studio7.exe 8 9 10 11 12
59
59
19
30
44
^C
H:\332_Local_Repo\332_studios\Studio7\Studio7\Debug>Studio7.exe 8 9 10 11 12
5
65
41
36
76
^C

Next, I tested to see if the user's numbers are being stored correctly, which they are:

H:\332_Local_Repo\332_studios\Studio7\Studio7\Debug>Studio7.exe 8 9 10 11 12
32
88
26
5
63
8
9
10
11
12

*Note, I just printed the first 5 of the 10 winning numbers for testing purposes. 

I then looked at the call to insertion_sort and found that the error was that we never exit the while loop
because instead of incrementing i we decrement j. 

Now that I have fixed the issue, I get an error that says vector subscript out of range! Using the debugger,
the error is at line 33 where middleIndex is (start + end) when it should be (start+end)/2.

Now there is the problem that the program displays jackpot every time. I examined the matches variable
and can't seem to figure out why it keeps getting incremented. 